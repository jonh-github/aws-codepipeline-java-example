version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - COMMIT_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo BUILD STARTED
      - echo Building Java jar...
      - mvn install
      - echo Replace DockerHub amazoncorretto with private ECR amazoncorretto...
      - sed -i "s/FROM amazoncorretto/FROM $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\/amazoncorretto/g" Dockerfile
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$COMMIT_TAG
  post_build:
    commands:
      - echo BUILD COMPLETE
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$COMMIT_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $ECS_CONTAINER_NAME $REPOSITORY_URI:$COMMIT_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
reports:
  junit-report:
    files:
      - 'target/surefire-reports/*.xml'
    file-format: 'JUNITXML'
  jacoco-report:
    files:
      - 'target/site/jacoco/jacoco.xml'
    file-format: 'JACOCOXML'
